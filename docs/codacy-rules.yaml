rules:
  - id: codacy.csharp.security.hard-coded-password
    severity: ERROR
    languages:
      - csharp
    patterns:
        - pattern-either:
          - pattern: var $PASSWORD = "$VALUE";
        - metavariable-regex:
            metavariable: "$PASSWORD"
            regex: "(?i).*(password|motdepasse|heslo|adgangskode|wachtwoord|salasana|passwort|passord|senha|geslo|clave|losenord|clave|parola|secret|pwd).*"
    message: Hardcoded passwords are a security risk. They can be easily found by attackers and used to gain unauthorized access to the system.
    metadata:
      owasp:
        - A3:2017 Sensitive Data Exposure
      description: Hardcoded passwords are a security risk.
      category: security
      technology:
        - .net
      impact: HIGH
  - id: codacy.generic.plsql.empty-strings
    severity: WARNING
    languages:
      - generic
    pattern: $VAR VARCHAR2($LENGTH) := '';
    message: Empty strings can lead to unexpected behavior and should be handled carefully.
    metadata:
      description: Detects empty strings in the code which might cause issues or bugs.
      category: security
      impact: MEDIUM
  - id: codacy.generic.plsql.find-all-passwords
    severity: ERROR
    languages:
      - generic
    pattern: |
      $PASSWORD VARCHAR2($LENGTH) := $...VALUE;
    options:
      generic_ellipsis_max_span: 0
    message: >
      Hardcoded or exposed passwords are a security risk. They can be easily found by attackers and used to gain unauthorized access to the system.
    metadata:
      owasp:
        - A3:2017 Sensitive Data Exposure
      description: Finding all occurrences of passwords in different languages and formats, while avoiding common false positives.
      category: security
      impact: HIGH
  - id: codacy.generic.plsql.resource-injection
    severity: ERROR
    languages:
      - generic
    pattern: |
        $RESOURCE := DBMS_CUBE.BUILD($...ARGS);
        $RESOURCE := DBMS_FILE_TRANSFER.COPY_FILE($...ARGS);
        $RESOURCE := DBMS_FILE_TRANSFER.GET_FILE($...ARGS);
        $RESOURCE := DBMS_FILE_TRANSFER.PUT_FILE($...ARGS);
        $RESOURCE := DBMS_SCHEDULER.GET_FILE($...ARGS);
        $RESOURCE := DBMS_SCHEDULER.PUT_FILE($...ARGS);
        $RESOURCE := DBMS_SCHEDULER.CREATE_PROGRAM($...ARGS);
        $RESOURCE := DBMS_SERVICE.CREATE_SERVICE($...ARGS);
        $RESOURCE := UTL_TCP.OPEN_CONNECTION($...ARGS);
        $RESOURCE := UTL_SMTP.OPEN_CONNECTION($...ARGS);
        $RESOURCE := WPG_DOCLOAD.DOWNLOAD_FILE($...ARGS);
    options:
      generic_ellipsis_max_span: 0
    message: Resource injection detected. This can lead to unauthorized access or manipulation of resources.
    metadata:
      owasp:
        - A3:2017 Sensitive Data Exposure
      description: Detects assignments in PL/SQL involving risky DBMS functions that might cause security issues.
      category: security
      impact: HIGH