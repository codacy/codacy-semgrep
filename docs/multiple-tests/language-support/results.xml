<?xml version="1.0" encoding="utf-8" ?>
<checkstyle version="1.5">
    <file name="bash/curl-eval.bash">
        <error source="bash.curl.security.curl-eval.curl-eval" line="5" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="warning" />
        <error source="bash.curl.security.curl-eval.curl-eval" line="10" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="warning" />
        <error source="bash.curl.security.curl-eval.curl-eval" line="16" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="warning" />
        <error source="bash.curl.security.curl-eval.curl-eval" line="19" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="warning" />
    </file>
    <file name="c/double-free.c">
        <error source="c.lang.security.double-free.double-free" line="7" message="Variable '$VAR' was freed twice. This can lead to undefined behavior." severity="error" />
    </file>
        <file name="clojure/use-of-md5.clj">
        <error source="clojure.lang.security.use-of-md5.use-of-md5" line="6" message="MD5 hash algorithm detected. This is not collision resistant and leads to easily-cracked password hashes. Replace with current recommended hashing algorithms." severity="warning" />
    </file>
    <file name="csharp/use_weak_rng_for_keygeneration.cs">
        <error source="csharp.dotnet.security.use_weak_rng_for_keygeneration.use_weak_rng_for_keygeneration" line="12" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="error" />
        <error source="csharp.dotnet.security.use_weak_rng_for_keygeneration.use_weak_rng_for_keygeneration" line="20" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="error" />
        <error source="csharp.dotnet.security.use_weak_rng_for_keygeneration.use_weak_rng_for_keygeneration" line="45" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="error" />
        <error source="csharp.dotnet.security.use_weak_rng_for_keygeneration.use_weak_rng_for_keygeneration" line="61" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="error" />
    </file>
    <file name="dockerfile/missing-user.dockerfile">
        <error source="dockerfile.security.missing-user.missing-user" line="10" message="By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'." severity="error" />
        <error source="dockerfile.security.missing-user.missing-user" line="13" message="By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'." severity="error" />
    </file>
    <file name="elixir/enum-map-into.exs">
        <error source="elixir.lang.best-practice.enum-map-into.enum_map_into" line="2" message="Using `Enum.into/3` is more efficient than using `Enum.map/2 |> Enum.into/2`." severity="warning" />
        <error source="elixir.lang.best-practice.enum-map-into.enum_map_into" line="5" message="Using `Enum.into/3` is more efficient than using `Enum.map/2 |> Enum.into/2`." severity="warning" />
        <error source="elixir.lang.best-practice.enum-map-into.enum_map_into" line="9" message="Using `Enum.into/3` is more efficient than using `Enum.map/2 |> Enum.into/2`." severity="warning" />
    </file>
    <file name="go/bad_tmp.go">
        <error source="go.lang.security.bad_tmp.bad-tmp-file-creation" line="10" message="File creation in shared tmp directory without using ioutil.Tempfile" severity="warning" />
    </file>
    <file name="javascript/ajv-allerrors-true.js">
        <error source="javascript.ajv.security.audit.ajv-allerrors-true.ajv-allerrors-true" line="7" message="By setting `allErrors: true` in `Ajv` library, all error objects will be allocated without limit. This allows the attacker to produce a huge number of errors which can lead to denial of service. Do not use `allErrors: true` in production." severity="warning" />
        <error source="javascript.ajv.security.audit.ajv-allerrors-true.ajv-allerrors-true" line="13" message="By setting `allErrors: true` in `Ajv` library, all error objects will be allocated without limit. This allows the attacker to produce a huge number of errors which can lead to denial of service. Do not use `allErrors: true` in production." severity="warning" />
        <error source="javascript.ajv.security.audit.ajv-allerrors-true.ajv-allerrors-true" line="20" message="By setting `allErrors: true` in `Ajv` library, all error objects will be allocated without limit. This allows the attacker to produce a huge number of errors which can lead to denial of service. Do not use `allErrors: true` in production." severity="warning" />
        <error source="javascript.ajv.security.audit.ajv-allerrors-true.ajv-allerrors-true" line="26" message="By setting `allErrors: true` in `Ajv` library, all error objects will be allocated without limit. This allows the attacker to produce a huge number of errors which can lead to denial of service. Do not use `allErrors: true` in production." severity="warning" />
    </file>
    <file name="javascript/set-state-no-op.jsx">
        <error source="javascript.react.correctness.hooks.set-state-no-op.calling-set-state-on-current-state" line="18" message="Calling setState on the current state is always a no-op. Did you mean to change the state like $Y(!$X) instead?" severity="error" />
    </file>
    <file name="json/public-s3-bucket.json">
        <error source="json.aws.security.public-s3-bucket.public-s3-bucket" line="18" message="Detected public S3 bucket. This policy allows anyone to have some kind of access to the bucket. The exact level of access and types of actions allowed will depend on the configuration of bucket policy and ACLs. Please review the bucket configuration to make sure they are set with intended values." severity="warning" />
    </file>
    <file name="kotlin/weak-rsa.kt">
        <error source="kotlin.lang.security.weak-rsa.use-of-weak-rsa-key" line="7" message="RSA keys should be at least 2048 bits based on NIST recommendation." severity="warning" />
        <error source="kotlin.lang.security.weak-rsa.use-of-weak-rsa-key" line="7" message="RSA keys should be at least 2048 bits based on NIST recommendation." severity="warning" />
    </file>
    <file name="php/ftp-use.php">
        <error source="php.lang.security.ftp-use.ftp-use" line="4" message="FTP allows for unencrypted file transfers. Consider using an encrypted alternative." severity="error" />
        <error source="php.lang.security.ftp-use.ftp-use" line="7" message="FTP allows for unencrypted file transfers. Consider using an encrypted alternative." severity="error" />
    </file>
    <file name="python/jwt-none-alg.py">
        <error source="python.jwt.security.jwt-none-alg.jwt-python-none-alg" line="5" message="Detected use of the 'none' algorithm in a JWT token. The 'none' algorithm assumes the integrity of the token has already been verified. This would allow a malicious actor to forge a JWT token that will automatically be verified. Do not explicitly use the 'none' algorithm. Instead, use an algorithm such as 'HS256'." severity="error" />
        <error source="python.jwt.security.jwt-none-alg.jwt-python-none-alg" line="10" message="Detected use of the 'none' algorithm in a JWT token. The 'none' algorithm assumes the integrity of the token has already been verified. This would allow a malicious actor to forge a JWT token that will automatically be verified. Do not explicitly use the 'none' algorithm. Instead, use an algorithm such as 'HS256'." severity="error" />
    </file>
    <file name="ruby/no-send.rb">
        <error source="ruby.lang.security.no-send.bad-send" line="3" message="Checks for unsafe use of Object#send, try, __send__, and public_send. These only account for unsafe use of a method, not target. This can lead to arbitrary calling of exit, along with arbitrary code execution. Please be sure to sanitize input in order to avoid this." severity="error" />
    </file>
    <file name="scala/jwt-hardcode.scala">
        <error source="scala.scala-jwt.security.jwt-hardcode.scala-jwt-hardcoded-secret" line="16" message="Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)" severity="error" />
    </file>
    <file name="swift/insecure-random.swift">
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="5" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="7" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="9" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="12" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="16" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="19" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="22" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="26" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="29" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="31" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="33" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="36" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
        <error source="swift.lang.crypto.insecure-random.insecure-random" line="42" message="A random number generator was detected which is **not** *guaranteed* to be Cryptographically secure. If the source of entropy is used for security purposes (e.g. with other Cryptographic operations), make sure to use the `SecCopyRandomBytes` API explicitly." severity="warning" />
    </file>
    <file name="terraform/rds-public-access.tf">
        <error source="terraform.lang.security.rds-public-access.rds-public-access" line="29" message="RDS instance accessible from the Internet detected." severity="warning" />
    </file>
    <file name="typescript/detect-child-process.ts">
        <error source="javascript.lang.security.detect-child-process.detect-child-process" line="6" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="error" />
        <error source="javascript.lang.security.detect-child-process.detect-child-process" line="13" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="error" />
        <error source="javascript.lang.security.detect-child-process.detect-child-process" line="13" message="Potential security issue detected. No specific details available. Please review the identified code segment for potential security vulnerabilities." severity="error" />
    </file>
    <file name="unknown_extension/double-free.h">
        <error source="c.lang.security.double-free.double-free" line="7" message="Variable '$VAR' was freed twice. This can lead to undefined behavior." severity="error" />
    </file>
    <file name="yaml/argo-workflow-parameter-command-injection.test.yaml">
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="19" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="19" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="19" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="19" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="19" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="19" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="19" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="19" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="30" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="30" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="30" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="30" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="30" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="30" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="30" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="30" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="40" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="40" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="40" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="40" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="40" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="40" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="50" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="50" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="50" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="50" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="50" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
        <error source="yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection" line="50" message="Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead." severity="error" />
    </file>
</checkstyle>
